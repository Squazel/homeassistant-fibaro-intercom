name: Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 custom_components/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 custom_components/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Format check with black
      run: |
        black --check custom_components/ tests/
    
    - name: Import sorting check with isort
      run: |
        isort --check-only custom_components/ tests/
    
    - name: Type checking with mypy
      run: |
        mypy custom_components/fibaro_intercom/ || true
        # Allow mypy to fail since we don't have Home Assistant installed for type checking
    
    - name: Test with pytest
      run: |
        cd custom_components/fibaro_intercom
        python -m pytest ../../tests/ -v --cov=client --cov-report=xml:../../tests/coverage.xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./tests/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test integration structure
      run: |
        # Verify the integration can be imported
        cd custom_components/fibaro_intercom
        python -c "from client import FibaroIntercomClient; print('Client import successful')"
        python -c "from const import DOMAIN; print(f'Domain: {DOMAIN}')"
        
        # Verify manifest.json is valid
        python -c "import json; json.load(open('manifest.json')); print('Manifest is valid JSON')"
        
        # Check that all required files exist
        test -f __init__.py && echo "__init__.py exists"
        test -f config_flow.py && echo "config_flow.py exists"
        test -f coordinator.py && echo "coordinator.py exists"
        test -f client.py && echo "client.py exists"
        test -f binary_sensor.py && echo "binary_sensor.py exists"
        test -f switch.py && echo "switch.py exists"
        test -f camera.py && echo "camera.py exists"
        test -f services.yaml && echo "services.yaml exists"
        test -f manifest.json && echo "manifest.json exists"
